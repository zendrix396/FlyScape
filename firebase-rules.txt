// Firestore rules
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
        (request.auth.token.admin == true || 
         request.auth.token.email == 'adityasenpai396@gmail.com');
    }
    
    // Helper function to check specific admin user
    function isSpecificAdmin() {
      return request.auth != null && 
        (request.auth.token.email == 'adityasenpai396@gmail.com');
    }
    
    // Allow read access to everything for the app to function properly
    match /{document=**} {
      allow read: if true;
    }
    
    // Allow users to create and write their own data
    match /users/{userId} {
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && (request.auth.uid == userId || isAdmin());
    }
    
    // Allow authenticated users to create bookings
    match /bookings/{bookingId} {
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        (request.auth.uid == resource.data.userId || isAdmin());
    }
    
    // Allow all operations on flight prices
    match /flightPrices/{flightId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Only admins can write to flights collection
    match /flights/{flightId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Allow specific admin to perform all operations
    match /flights/{flightId} {
      allow read, write, create, update, delete: if isSpecificAdmin();
    }
    
    // Allow batch writes for the specific admin
    match /flights/{document=**} {
      allow read, write, create, update, delete: if isSpecificAdmin();
    }
  }
} 